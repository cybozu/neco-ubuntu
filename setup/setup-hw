#!/usr/bin/python3

import ipaddress
import json
import subprocess
import sys
import time


RACK_INFORMATION = '/etc/neco/rack'
BMC_ADDRESS = '/etc/neco/bmc_address'
BMC_USER_INFO = '/etc/neco/bmc_user.json'
PLACEMAT_PARAM_DEVICE = '/dev/virtio-ports/placemat'

BMC_NETMASK = '255.255.240.0'

VM = subprocess.run(['systemd-detect-virt', '-v'], stdout=subprocess.DEVNULL).returncode == 0


def load_user(filename: str) -> dict:
    with open(filename) as f:
        j = json.load(f)
    if not isinstance(j, list):
        raise TypeError('invalid contents in ' + filename)
    return {d["user"]: (d["hash"], d["salt"]) for d in j}


def load_rack(filename: str) ->int:
    with open(filename) as f:
        return int(f.read())


def load_bmc_address(filename: str) -> ipaddress.IPv4Address:
    with open(filename) as f:
        return ipaddress.IPv4Address(f.read().strip())


def main():
    user_dict = load_user(BMC_USER_INFO)
    rack = load_rack(RACK_INFORMATION)
    bmc = load_bmc_address(BMC_ADDRESS)

    if VM:
        with open(PLACEMAT_PARAM_DEVICE, mode='w') as f:
            f.write(str(bmc)+'\n')
        return

    while True:
        cmd = ["podenter", "omsa", "idracadm7", "get", "iDRAC.Info.Name"]
        p = subprocess.run(cmd, stdout=subprocess.PIPE)  # ignore error
        if 'Name=iDRAC' in p.stdout.decode():
            break
        print("setup-hw: retrying...", file=sys.stderr)
        time.sleep(1)

    cmd = ["podenter", "omsa", "idracadm7", "jobqueue", "view"]
    p = subprocess.run(cmd, check=True, stdout=subprocess.PIPE)
    if 'Status=Scheduled' in p.stdout.decode():
        print('Current Jobs are queued', file=sys.stderr)
        sys.exit(1)

    bmc_gw = ipaddress.IPv4Address(int(bmc) & int(ipaddress.IPv4Address(BMC_NETMASK)) + 1)
    root_password = user_dict["root"]
    cybozu_password = user_dict["cybozu"]
    support_password = user_dict["support"]
    cmd = ["podenter", "omsa", "/opt/sbin/setup-hw", "--",
           "--ome-ip", str(bmc),
           "--rac-name", "rack{}-boot-idrac".format(rack),
           "--idrac-ip", str(bmc),
           "--idrac-netmask", BMC_NETMASK,
           "--gateway-ip", str(bmc_gw),
           "--root-hash", root_password[0],
           "--root-salt", root_password[1],
           "--cybozu-hash", cybozu_password[0],
           "--cybozu-salt", cybozu_password[1],
           "--cybozu-ssh-keys", "/dev/null",
           "--support-hash", support_password[0],
           "--support-salt", support_password[1]]
    subprocess.run(cmd, check=True)

    cmd = ["podenter", "omsa", "idracadm7", "jobqueue", "view"]
    p = subprocess.run(cmd, check=True, stdout=subprocess.PIPE)
    if 'Status=Scheduled' in p.stdout.decode():
        print('Setup succeeded, machine will reboot', file=sys.stderr)
        subprocess.run(["reboot"], check=True)
        time.sleep(1000)


if __name__ == '__main__':
    main()
